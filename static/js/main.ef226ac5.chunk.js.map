{"version":3,"sources":["components/UserSelector.tsx","utils/fetchClient.ts","components/Loader/Loader.tsx","components/PostsList.tsx","components/NewCommentForm.tsx","components/PostDetails.tsx","App.tsx","index.tsx"],"names":["UserSelector","users","selectedUser","setSelectedUser","useState","isMenuOpen","setIsMenuOpen","ref","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","className","cn","type","onClick","name","id","role","map","user","href","preventDefault","handleSelectUser","request","url","delay","data","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","json","client","Loader","PostsList","posts","selectedPost","setSelectedPost","onButtonClick","post","title","NewCommentForm","isCreatingComment","addComment","setName","hasNameError","setHasNameError","email","setEmail","hasEmailError","setHasEmailError","setBody","hasBodyError","setHasBodyError","onSubmit","trim","onReset","htmlFor","placeholder","value","onChange","PostDetails","errorMessage","setErrorMessage","loading","setLoading","isOpenEditor","setIsOpenEditor","comments","setComments","setIsCreatingComment","catch","finally","length","comment","prevComments","filter","deleteComment","postId","newComment","currentComments","App","setUsers","setPosts","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ef226ac5.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport cn from 'classnames';\n\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[],\n  selectedUser: User | null,\n  setSelectedUser: (user: User) => void,\n};\n\nexport const UserSelector: React.FC<Props> = ({\n  users,\n  selectedUser,\n  setSelectedUser,\n}) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        setIsMenuOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  function handleSelectUser(\n    event: React.MouseEvent<HTMLAnchorElement>,\n    user: User,\n  ) {\n    event.preventDefault();\n    setSelectedUser(user);\n    setIsMenuOpen(false);\n  }\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={cn('dropdown', { 'is-active': isMenuOpen })}\n      ref={ref}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setIsMenuOpen(!isMenuOpen)}\n        >\n          <span>{selectedUser?.name ?? 'Choose a user'}</span>\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map(user => (\n            <a\n              key={user.id}\n              href={`#user-${user.id}`}\n              className={cn('dropdown-item', {\n                'is-active': selectedUser?.id === user.id,\n              })}\n              onClick={event => handleSelectUser(event, user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Post } from '../types/Post';\n\ntype Props = {\n  posts: Post[],\n  selectedPost: Post | null,\n  setSelectedPost: (post: Post | null) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPost,\n  setSelectedPost,\n}) => {\n  const onButtonClick = (post: Post) => () => {\n    if (post.id === selectedPost?.id) {\n      setSelectedPost(null);\n    } else {\n      setSelectedPost(post);\n    }\n  };\n\n  return (\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts.map(post => (\n            <tr data-cy=\"Post\" key={post.id}>\n              <td data-cy=\"PostId\">{post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                {post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={cn('button is-link', {\n                    'is-light': post.id !== selectedPost?.id,\n                  })}\n                  onClick={onButtonClick(post)}\n                >\n                  {post.id === selectedPost?.id ? 'Close' : 'Open'}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport { CommentData } from '../types/Comment';\n\ntype Props = {\n  isCreatingComment: boolean,\n  addComment: (comment: CommentData) => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  isCreatingComment, addComment,\n}) => {\n  const [name, setName] = useState('');\n  const [hasNameError, setHasNameError] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [hasEmailError, setHasEmailError] = useState(false);\n\n  const [body, setBody] = useState('');\n  const [hasBodyError, setHasBodyError] = useState(false);\n\n  function handleSubmitForm(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    setHasNameError(!name.trim());\n    setHasEmailError(!email.trim());\n    setHasBodyError(!body.trim());\n\n    if (!name.trim() || !email.trim() || !body.trim()) {\n      return;\n    }\n\n    addComment({ name, email, body });\n    setBody('');\n  }\n\n  function handleResetForm() {\n    setName('');\n    setEmail('');\n    setBody('');\n    setHasNameError(false);\n    setHasEmailError(false);\n    setHasBodyError(false);\n  }\n\n  const handleNameInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setHasNameError(false);\n  };\n\n  const handleEmailInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n    setHasEmailError(false);\n  };\n\n  const handleBodyInput = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setBody(event.target.value);\n    setHasBodyError(false);\n  };\n\n  return (\n    <form\n      data-cy=\"NewCommentForm\"\n      onSubmit={handleSubmitForm}\n      onReset={handleResetForm}\n    >\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={cn('input', { 'is-danger': hasNameError })}\n            value={name}\n            onChange={handleNameInput}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {hasNameError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasNameError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={cn('input', { 'is-danger': hasEmailError })}\n            value={email}\n            onChange={handleEmailInput}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {hasEmailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={cn('input', { 'is-danger': hasBodyError })}\n            value={body}\n            onChange={handleBodyInput}\n          />\n        </div>\n\n        {hasBodyError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={cn('button is-link', {\n              'is-loading': isCreatingComment,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button type=\"reset\" className=\"button is-link is-light\">\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","/* eslint-disable react/jsx-no-bind */\nimport React, { useEffect, useState } from 'react';\n\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { client } from '../utils/fetchClient';\nimport { Comment, CommentData } from '../types/Comment';\n\ntype Props = {\n  post: Post | null,\n};\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isOpenEditor, setIsOpenEditor] = useState(false);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isCreatingComment, setIsCreatingComment] = useState(false);\n\n  useEffect(() => {\n    if (!post) {\n      return;\n    }\n\n    setErrorMessage('');\n    setLoading(true);\n    setIsOpenEditor(false);\n\n    client.get<Comment[]>(`/comments?postId=${post.id}`)\n      .then(data => setComments(data))\n      .catch(() => setErrorMessage('Fail to load comments'))\n      .finally(() => setLoading(false));\n  }, [post]);\n\n  function deleteComment({ id }: { id: number }) {\n    client.delete(`/comments/${id}`);\n\n    setComments(prevComments => prevComments\n      .filter(comment => comment.id !== id));\n  }\n\n  function addComment(comment: CommentData) {\n    if (!post) {\n      return;\n    }\n\n    setErrorMessage('');\n    setIsCreatingComment(true);\n\n    client.post<Comment>('/comments', { ...comment, postId: post.id })\n      .then(newComment => {\n        setComments(currentComments => [...currentComments, newComment]);\n      })\n      .catch(() => setErrorMessage('Fail to load comments'))\n      .finally(() => setIsCreatingComment(false));\n  }\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post?.id}: ${post?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {loading && <Loader />}\n\n          {errorMessage && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              {errorMessage}\n            </div>\n          )}\n\n          {comments.length === 0 && !loading && !errorMessage && (\n            <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n              No comments yet\n            </p>\n          )}\n\n          {comments.length > 0 && !loading && !errorMessage && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              {comments.map(comment => (\n                <article\n                  key={comment.id}\n                  className=\"message is-small\"\n                  data-cy=\"Comment\"\n                >\n                  <div className=\"message-header\">\n                    <a\n                      href={`mailto:${comment.email}`}\n                      data-cy=\"CommentAuthor\"\n                    >\n                      {comment.name}\n                    </a>\n                    <button\n                      data-cy=\"CommentDelete\"\n                      type=\"button\"\n                      className=\"delete is-small\"\n                      aria-label=\"delete\"\n                      onClick={() => deleteComment(comment)}\n                    >\n                      delete button\n                    </button>\n                  </div>\n\n                  <div className=\"message-body\" data-cy=\"CommentBody\">\n                    {comment.body}\n                  </div>\n                </article>\n              ))}\n            </>\n          )}\n\n          {!isOpenEditor && !loading && !errorMessage && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setIsOpenEditor(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {isOpenEditor && (\n          <NewCommentForm\n            isCreatingComment={isCreatingComment}\n            addComment={addComment}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport { UserSelector } from './components/UserSelector';\nimport { client } from './utils/fetchClient';\nimport { User } from './types/User';\nimport { Loader } from './components/Loader';\nimport { Post } from './types/Post';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  useEffect(() => {\n    client.get<User[]>('/users')\n      .then(data => setUsers(data))\n      .catch(() => setErrorMessage('Fail to load users'));\n  }, []);\n\n  useEffect(() => {\n    if (!selectedUser) {\n      return;\n    }\n\n    setErrorMessage('');\n    setLoading(true);\n    setSelectedPost(null);\n\n    client.get<Post[]>(`/posts?userId=${selectedUser.id}`)\n      .then(data => setPosts(data))\n      .catch(() => setErrorMessage('Fail to load posts'))\n      .finally(() => setLoading(false));\n  }, [selectedUser?.id]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  selectedUser={selectedUser}\n                  setSelectedUser={setSelectedUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {loading && selectedUser && (<Loader />)}\n\n                {errorMessage && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    {errorMessage}\n                  </div>\n                )}\n\n                {\n                  selectedUser\n                  && posts.length === 0\n                  && !loading\n                  && !errorMessage\n                  && (\n                    <div\n                      className=\"notification is-warning\"\n                      data-cy=\"NoPostsYet\"\n                    >\n                      No posts yet\n                    </div>\n                  )\n                }\n\n                {posts.length > 0 && !loading && !errorMessage && (\n                  <PostsList\n                    posts={posts}\n                    selectedPost={selectedPost}\n                    setSelectedPost={setSelectedPost}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={cn(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': selectedPost },\n            )}\n          >\n            {selectedPost && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails\n                  post={selectedPost}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}